P -> B P
P -> F P
P -> S P
P -> lambda
F -> function H ID ( A ) { C }
C -> B C
C -> S C
C -> lambda
E -> R Y
Y -> || R Y
Y -> lambda
R -> U I
I -> && U
I -> lambda
U -> V O
O -> != V
O -> == V
O -> lambda
V -> W J
J -> + W J
J -> - W J
J -> lambda
W -> ++ ID
W -> ( E )
W -> ID D
W -> ENTERO
W -> CADENA
W -> true
W -> false
D -> ( L )
D -> lambda
B -> let T ID ;
B -> if ( E ) S
B -> for ( N ; E ; M ) { C }
N -> ID = E
N -> lambda
M -> N
M -> ++ ID
S -> ID G ;
S -> ++ ID ;
G -> = E
G -> ( L )
S -> input ( ID ) ;
S -> alert ( E ) ;
S -> return X ;
X -> E
X -> lambda
L -> E Q
L -> lambda
Q -> , E Q
Q -> lambda
H -> T
H -> lambda
T -> boolean
T -> string
T -> number
A -> T ID K
A -> lambda
K -> , T ID K
K -> lambda